# Key: procinfo.discovery[<command>]
# Args:
#   command: process name(execute command)
# Return: process name and pid and process arg(first arg) for LLD
UserParameter=procinfo.discovery[*],ps -eo pid,comm,args | awk 'BEGIN{printf "{\n\t\"data\":[\n"} /^.+(awk|zabbix|sh)/{next} /^.+$1/{printf comma"\t\t{\"{#PROCNAME}\":\""$$2"\", \"{#PROCID}\":\""$$1"\", \"{#PROCARG}\":\""$$4"\"}"; comma=",\n"} END{print "\n\t]\n}"}' | egrep -v "awk|zabbix|sh|dhclient"
# Key: proc.listentcp.discovery[<command>]
# Args:
#   command: process name(execute command)
# Return: LISTENING Port and LISTENING IP of the <command> for LLD
UserParameter=proc.listentcp.discovery[*],netstat -ltpn --inet | grep -P '^(?=.*tcp)(?=.*LISTEN)(?=.*($1))' | awk 'BEGIN{printf "{\n\t\"data\":[\n"} match($$4, /^([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+):([0-9]+)/, res) {printf comma"\t\t{\"{#PROCTCPLISTEN}\":\""res[2]"\", \"{#PROCLISTENIP}\":\""res[1]"\"}"; comma=",\n"} END{print "\n\t]\n}"}'
# Key: proc.uptime[<command>,[<user>], [<arg>]]
# Args:
#   command: process name(execute command)
#   user(optional): user neme
#   arg(optional): first argument of the command line
# Return: Uptime of the <command>
UserParameter=proc.uptime[*],ps -eo user:32,etime,comm,args | grep $1 | grep -v grep | awk '{if (($$3 == "$1") && ($$1 == "$2" || "$2" == "") && ($$5 == "$3" || "$3" == "")) print $$2}' | sed -e 's/:\|-/ /g' | awk '{print $$4,$$3,$$2,$$1}' | awk '{print ($$1)+($$2*60)+($$3*3600)+($$4*86400)}' | head -1
# Key: procinfo.fd[<command>,<arg>]
# Args:
#   command: process name(execute command)
#   arg: first argument of command(Divide command line by white space, then extracts the second element)
# Return: file discriptors opened by the command
UserParameter=procinfo.fd[*],ps -eo pid,comm,args | awk '{ if ($$2 ~ /^$1$$/ && ($$4 == "$2" || "$2" == "")) print $$1 }' | (read pid;ls /proc/$$pid/fd) | wc -l

# Key: procinfo.limits.mof[<command>,<arg>]
# Args:
#   command: process name(execute command)
#   arg: first argument of command(Divide command line by white space, then extracts the second element)
# Return: Max open files of the specified process
UserParameter=procinfo.limits.mof[*],ps -eo pid,comm,args | awk '{ if ($$2 ~ /$1/ && ($$4 == "$2" || "$2" == "")) print $$1 }' |(read pid;cat /proc/$$pid/limits | awk '/Max open files/ { print $$4 }')

# Key: procinfo.iostats.master[<command>,<arg>]
# Args:
#   command: process name(execute command)
#   arg(optional): first argument of executing command(divide executing command line by white space, then extracts the second element)
# Return: io stats of the specified process. its master item.
UserParameter=procinfo.iostats.master[*],ps -eo pid,comm,args | awk '{ if ($$2 ~ /$1/ && ($$4 ~ "$2" || "$2" == "")) print $$1 }' | (read pid; cat /proc/$$pid/io | sed -e "s/: \+/ /" -e "s/(\(.*\))/_\1/" | awk 'BEGIN{printf "{"} { printf comma"\""$$1"\":"$$2; comma=", "} END{print "}"}')
